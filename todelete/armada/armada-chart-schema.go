// Code generated by schema-generate. DO NOT EDIT.

package armada

// Delete
type Delete struct {
	Timeout int `json:"timeout,omitempty"`
}

// HookActionItems
type HookActionItems struct {
	Labels *Labels `json:"labels,omitempty"`
	Name   string  `json:"name,omitempty"`
	Type   string  `json:"type"`
}

// Install
type Install struct {
}

// Labels
type Labels struct {
	AdditionalProperties map[string]string `json:"-,omitempty"`
}

// Native
type Native struct {
	Enabled bool `json:"enabled,omitempty"`
}

// Options
type Options struct {
	Force        bool `json:"force,omitempty"`
	RecreatePods bool `json:"recreate_pods,omitempty"`
}

// Post
type Post struct {
	Create []*HookActionItems `json:"create,omitempty"`
}

// Pre
type Pre struct {
	Create []*HookActionItems `json:"create,omitempty"`
	Delete []*HookActionItems `json:"delete,omitempty"`
	Update []*HookActionItems `json:"update,omitempty"`
}

// Protected
type Protected struct {
	ContinueProcessing bool `json:"continue_processing,omitempty"`
}

// ResourcesItems
type ResourcesItems struct {
	Labels   *Labels     `json:"labels,omitempty"`
	MinReady interface{} `json:"min_ready,omitempty"`
	Type     string      `json:"type"`
}

// Root
type ArmadaChartSchema struct {
	ChartName    string      `json:"chart_name"`
	Delete       *Delete     `json:"delete,omitempty"`
	Dependencies []string    `json:"dependencies"`
	Install      *Install    `json:"install,omitempty"`
	Namespace    string      `json:"namespace"`
	Protected    *Protected  `json:"protected,omitempty"`
	Release      string      `json:"release"`
	Source       *Source     `json:"source"`
	Test         interface{} `json:"test,omitempty"`
	Timeout      int         `json:"timeout,omitempty"`
	Upgrade      *Upgrade    `json:"upgrade,omitempty"`
	Values       *Values     `json:"values,omitempty"`
	Wait         *Wait       `json:"wait,omitempty"`
}

// Source
type Source struct {
	AuthMethod  string `json:"auth_method,omitempty"`
	Location    string `json:"location"`
	ProxyServer string `json:"proxy_server,omitempty"`
	Reference   string `json:"reference,omitempty"`
	Subpath     string `json:"subpath"`
	Type        string `json:"type"`
}

// Upgrade
type Upgrade struct {
	NoHooks bool     `json:"no_hooks"`
	Options *Options `json:"options,omitempty"`
	Post    *Post    `json:"post,omitempty"`
	Pre     *Pre     `json:"pre,omitempty"`
}

// Values
type Values struct {
}

// Wait
type Wait struct {
	Labels    *Labels           `json:"labels,omitempty"`
	Native    *Native           `json:"native,omitempty"`
	Resources []*ResourcesItems `json:"resources,omitempty"`
	Timeout   int               `json:"timeout,omitempty"`
}
