// Code generated by schema-generate. DO NOT EDIT.

package shipyard

// Armada
type Armada struct {
	GetReleasesTimeout    int    `json:"get_releases_timeout,omitempty"`
	GetStatusTimeout      int    `json:"get_status_timeout,omitempty"`
	Manifest              string `json:"manifest"`
	PostApplyTimeout      int    `json:"post_apply_timeout,omitempty"`
	ValidateDesignTimeout int    `json:"validate_design_timeout,omitempty"`
}

// Kubernetes
type Kubernetes struct {
	NodeStatusInterval int `json:"node_status_interval,omitempty"`
	NodeStatusTimeout  int `json:"node_status_timeout,omitempty"`
}

// KubernetesProvisioner
type KubernetesProvisioner struct {
	ClearLabelsTimeout int `json:"clear_labels_timeout,omitempty"`
	DrainGracePeriod   int `json:"drain_grace_period,omitempty"`
	DrainTimeout       int `json:"drain_timeout,omitempty"`
	EtcdReadyTimeout   int `json:"etcd_ready_timeout,omitempty"`
	RemoveEtcdTimeout  int `json:"remove_etcd_timeout,omitempty"`
}

// PhysicalProvisioner
type PhysicalProvisioner struct {
	DeployInterval       int    `json:"deploy_interval,omitempty"`
	DeployTimeout        int    `json:"deploy_timeout,omitempty"`
	DeploymentStrategy   string `json:"deployment_strategy,omitempty"`
	DestroyInterval      int    `json:"destroy_interval,omitempty"`
	DestroyTimeout       int    `json:"destroy_timeout,omitempty"`
	JoinWait             int    `json:"join_wait,omitempty"`
	PrepareNodeInterval  int    `json:"prepare_node_interval,omitempty"`
	PrepareNodeTimeout   int    `json:"prepare_node_timeout,omitempty"`
	PrepareSiteInterval  int    `json:"prepare_site_interval,omitempty"`
	PrepareSiteTimeout   int    `json:"prepare_site_timeout,omitempty"`
	RelabelNodesInterval int    `json:"relabel_nodes_interval,omitempty"`
	RelabelNodesTimeout  int    `json:"relabel_nodes_timeout,omitempty"`
	VerifyInterval       int    `json:"verify_interval,omitempty"`
	VerifyTimeout        int    `json:"verify_timeout,omitempty"`
}

// Root
type DeploymentConfigurationSpec struct {
	Armada                *Armada                `json:"armada"`
	Kubernetes            *Kubernetes            `json:"kubernetes,omitempty"`
	KubernetesProvisioner *KubernetesProvisioner `json:"kubernetes_provisioner,omitempty"`
	PhysicalProvisioner   *PhysicalProvisioner   `json:"physical_provisioner,omitempty"`
}
